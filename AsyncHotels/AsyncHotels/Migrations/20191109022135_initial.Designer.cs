// <auto-generated />
using AsyncHotels.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncHotels.Migrations
{
    [DbContext(typeof(AsyncDbContext))]
    [Migration("20191109022135_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncHotels.Models.Amenities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amenity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Amenity = "Massage bed"
                        },
                        new
                        {
                            ID = 2,
                            Amenity = "Turbo shower"
                        },
                        new
                        {
                            ID = 3,
                            Amenity = "Hands-Free wipe toilet"
                        },
                        new
                        {
                            ID = 4,
                            Amenity = "Holographic phone"
                        },
                        new
                        {
                            ID = 5,
                            Amenity = "Botomless Hummus"
                        });
                });

            modelBuilder.Entity("AsyncHotels.Models.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Omaha",
                            HotelName = "Bubbles Inn",
                            Phone = "111-111-0000",
                            State = "Idaho",
                            StreetAdress = "1st street"
                        },
                        new
                        {
                            ID = 2,
                            City = "Springfield",
                            HotelName = "Cuddles Inn",
                            Phone = "222-222-2222",
                            State = "Ohio",
                            StreetAdress = "2nd street"
                        },
                        new
                        {
                            ID = 3,
                            City = "San Antonio",
                            HotelName = "Puddles Inn",
                            Phone = "333-333-3333",
                            State = "Texas",
                            StreetAdress = "3rd street"
                        },
                        new
                        {
                            ID = 4,
                            City = "Enumclaw",
                            HotelName = "Dubbles Inn",
                            Phone = "444-444-44444",
                            State = "Washington",
                            StreetAdress = "4th street"
                        },
                        new
                        {
                            ID = 5,
                            City = "Las Vegas",
                            HotelName = "Wubbles Inn",
                            Phone = "555-555-5555",
                            State = "Nevada",
                            StreetAdress = "5th street"
                        });
                });

            modelBuilder.Entity("AsyncHotels.Models.HotelRoom", b =>
                {
                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<bool>("PetFriendly")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("HotelID", "RoomID");

                    b.HasIndex("RoomID");

                    b.ToTable("HotelRooms");
                });

            modelBuilder.Entity("AsyncHotels.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Layout")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 1,
                            Nickname = "People's Republic of Ninight"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 0,
                            Nickname = "Candle Light"
                        },
                        new
                        {
                            ID = 3,
                            Layout = 2,
                            Nickname = "Pumperschniquel"
                        },
                        new
                        {
                            ID = 4,
                            Layout = 1,
                            Nickname = "Live, Laugh, Love"
                        },
                        new
                        {
                            ID = 5,
                            Layout = 0,
                            Nickname = "Chicken Pot Pie"
                        },
                        new
                        {
                            ID = 6,
                            Layout = 2,
                            Nickname = "Smells like Christmas"
                        });
                });

            modelBuilder.Entity("AsyncHotels.Models.RoomAmenities", b =>
                {
                    b.Property<int>("AmenitiesID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("AmenitiesID", "RoomID");

                    b.HasIndex("RoomID");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("AsyncHotels.Models.HotelRoom", b =>
                {
                    b.HasOne("AsyncHotels.Models.Hotel", "Hotel")
                        .WithMany("HotelRoom")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsyncHotels.Models.Room", "Room")
                        .WithMany("HotelRoom")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AsyncHotels.Models.RoomAmenities", b =>
                {
                    b.HasOne("AsyncHotels.Models.Amenities", "Amenities")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("AmenitiesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsyncHotels.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
